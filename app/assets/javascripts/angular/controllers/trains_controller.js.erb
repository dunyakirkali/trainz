trainzApp.controller('TrainsController', ['$scope', 'AudioService', 'DKOverlay', 'osmAPI', 'overpassAPI',
function ($scope, AudioService, DKOverlay, osmAPI, overpassAPI) {
  // Trains
  $scope.trains = [{
    name: '17400 Breukelen-Veenendaal',
    osm_id: '1860734',
    controls: {
      speed: 0.0001,
      follow: false
    }
  }];
  $scope.train;

  $scope.timer;
  $scope.followIndex = 0;
  $scope.routes = []

  // Countries
  $scope.country = 'Netherlands';
  $scope.countries = ["Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antigua &amp; Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas"
		,"Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bosnia &amp; Herzegovina","Botswana","Brazil","British Virgin Islands"
		,"Brunei","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Cape Verde","Cayman Islands","Chad","Chile","China","Colombia","Congo","Cook Islands","Costa Rica"
		,"Cote D Ivoire","Croatia","Cruise Ship","Cuba","Cyprus","Czech Republic","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea"
		,"Estonia","Ethiopia","Falkland Islands","Faroe Islands","Fiji","Finland","France","French Polynesia","French West Indies","Gabon","Gambia","Georgia","Germany","Ghana"
		,"Gibraltar","Greece","Greenland","Grenada","Guam","Guatemala","Guernsey","Guinea","Guinea Bissau","Guyana","Haiti","Honduras","Hong Kong","Hungary","Iceland","India"
		,"Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kuwait","Kyrgyz Republic","Laos","Latvia"
		,"Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Mauritania"
		,"Mauritius","Mexico","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Namibia","Nepal","Netherlands","Netherlands Antilles","New Caledonia"
		,"New Zealand","Nicaragua","Niger","Nigeria","Norway","Oman","Pakistan","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Poland","Portugal"
		,"Puerto Rico","Qatar","Reunion","Romania","Russia","Rwanda","Saint Pierre &amp; Miquelon","Samoa","San Marino","Satellite","Saudi Arabia","Senegal","Serbia","Seychelles"
		,"Sierra Leone","Singapore","Slovakia","Slovenia","South Africa","South Korea","Spain","Sri Lanka","St Kitts &amp; Nevis","St Lucia","St Vincent","St. Lucia","Sudan"
		,"Suriname","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","Timor L'Este","Togo","Tonga","Trinidad &amp; Tobago","Tunisia"
		,"Turkey","Turkmenistan","Turks &amp; Caicos","Uganda","Ukraine","United Arab Emirates","United Kingdom","Uruguay","Uzbekistan","Venezuela","Vietnam","Virgin Islands (US)"
		,"Yemen","Zambia","Zimbabwe"];

  // Operators
  $scope.company = {
    name: 'NS'
  }
  $scope.companies = [{ name: 'NS'}];

  $scope.horn = function () {
    AudioService.play();
  };

  $scope.focusOnCountry = function(country) {
    var geocoder = new google.maps.Geocoder();
    geocoder.geocode( { 'address': country }, function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        $scope.draw_map.fitBounds(results[0].geometry.bounds);
        $scope.draw_map.setCenter(results[0].geometry.location);
        overpassAPI.overpass('relation(50.745,7.17,50.75,7.18)[route=train];out;').then(function(data) {
          console.log('relation:', data);
        });
      } else {
        alert("Coul not Geocode because: " + status);
      }
    });
  }

  $scope.speedChanged = function() {
    AudioService.setSpeed($scope.trains[0].controls.speed / 350.);
    $scope.overlay.speed = $scope.trains[0].controls.speed;
  };

  $scope.followChanged = function() {
    $scope.overlay.follow = $scope.trains[0].controls.follow;
  };
  $scope.followIndexChanged = function() {
    $scope.overlay.setFollowIndex($scope.followIndex);
  };

  $scope.initDrawMap = function() {
    var mapOptions = {
      zoom: 14,
      center: new google.maps.LatLng(43.093336741, -75.194946527),
      mapTypeId: google.maps.MapTypeId.SATELLITE,
      draggable: false,
      zoomControl: true,
      scrollwheel: false,
      disableDoubleClickZoom: true,
      mapTypeControlOptions: {
        mapTypeIds: ['Map', 'Satellite', 'OpenStreetMap']
      }
    };
    $scope.draw_map = new google.maps.Map(d3.select("#google_map").node(), mapOptions);

    // Layers
    $scope.draw_map.mapTypes.set("OSM", new google.maps.ImageMapType({
      getTileUrl: function(coord, zoom) {
        // "Wrap" x (logitude) at 180th meridian properly
        // NB: Don't touch coord.x because coord param is by reference, and changing its x property breakes something in Google's lib
        var tilesPerGlobe = 1 << zoom;
        var x = coord.x % tilesPerGlobe;
        if (x < 0) {
            x = tilesPerGlobe+x;
        }
        // Wrap y (latitude) in a like manner if you want to enable vertical infinite scroll
        return "http://tile.openstreetmap.org/" + zoom + "/" + x + "/" + coord.y + ".png?type=rail";
      },
      tileSize: new google.maps.Size(256, 256),
      name: "OpenStreetMap",
      maxZoom: 18
    }));

    google.maps.Map.prototype.getMapScale = function () {
        var circumference = 40075040, zoom, lat, scale;
        zoom = this.getZoom();
        lat = this.getCenter().lat();
        scale = (circumference * Math.cos(lat) / Math.pow(2, zoom + 8));
        return scale;
    }
    $scope.overlay = new DKOverlay($scope.draw_map);
    $scope.overlay.setMap($scope.draw_map);
    google.maps.event.addListener($scope.draw_map, 'idle', function() {
      if(!$scope.timer) {
        $scope.timer = setInterval(function() {
          $scope.overlay.redraw();
        },30);
      }
    });
  };

  $scope.displayCompany = function(company) {
    console.log(company);
  };

  $scope.displayTrain = function() {
    $scope.refs = [];
    osmAPI.get('/0.6/relation/' + $scope.train.osm_id, {}).then(function(data) {
      console.log('relation:', data);
      $(data).find('relation').find('member[type="way"]').each(function(index, way) {
        $scope.refs.push($(way).attr('ref'));
        $scope.getWay($(way).attr('ref'));
      });
    });
  };

  $scope.getWay = function(way_osm_id) {
    items = [
      { '6305893': 'mm_20_gray.png' },
      { '345562987': 'mm_20_green.png'},
      { '345562989': 'mm_20_orange.png'},
      { '284887051': 'mm_20_purple.png'},
      { '89498026': 'mm_20_red.png'},
      { '354562985': 'mm_20_white.png'},
      { '354562986': 'mm_20_yellow.png'},
      { '354562987': 'mm_20_black.png'},
      { '354562989': 'mm_20_blue.png'},
      { '89497939': 'mm_20_brown.png'}
    ]
    osmAPI.get('/0.6/way/' + way_osm_id, {}).then(function(data) {
      console.log('way:', data);
      $(data).find('way').find('nd').each(function(index, way) {
        var item = $.grep(items, function(e){ return Object.keys(e)[0] == $(data).find('way').attr('id'); });
        $scope.getNode($(way).attr('ref'), item[0][$(data).find('way').attr('id')]);
      });
    });
  };

  $scope.getNode = function(node_osm_id, icon) {
    osmAPI.get('/0.6/node/' + node_osm_id, {}).then(function(data) {
      console.log('node:', $(data).find('node').attr('id'));
      $scope.draw_map.setCenter(new google.maps.LatLng(parseFloat($(data).find('node').attr('lat')), parseFloat($(data).find('node').attr('lon'))));
      new google.maps.Marker({
        position: new google.maps.LatLng(parseFloat($(data).find('node').attr('lat')), parseFloat($(data).find('node').attr('lon'))),
        map: $scope.draw_map,
        title: $(data).find('node').attr('id'),
        icon: 'http://labs.google.com/ridefinder/images/' + icon
      });
    });
  };

  AudioService.init();

  $scope.initDrawMap();
}]);

DKOverlay.prototype = new google.maps.OverlayView();

function DKOverlay(map) {
  this.speed = 0.001;
  this.time = 0.0;
  this.gmap = map;
  this.div;
  this.svg;
  this.group;
  this.circles = [];    
  this.pathNode;
  this.pathLength;
  this.dataLoaded = false;
  this.bounds;
}

DKOverlay.prototype.onAdd = function() {

  var that = this;
  
  this.div = d3.select(this.getPanes().overlayLayer).append("div").attr("id", "d3map");
  this.svg = this.div.append('svg:svg');

  d3.json("<%= asset_path 'track.json' %>", function(json) {
    var gBounds = d3.geo.bounds(json);
    var sw = new google.maps.LatLng(gBounds[0][1], gBounds[0][0])
    var ne = new google.maps.LatLng(gBounds[1][1], gBounds[1][0])
    that.bounds = new google.maps.LatLngBounds(sw, ne);
    that.addTrack(json.features);
    that.addTrain(null);
    that.dataLoaded = true;
  });
     
  google.maps.event.addListener(map, 'bounds_changed', that.draw);
  google.maps.event.addListener(map, 'center_changed', that.draw);
};

DKOverlay.prototype.addTrack = function(track) { 
  
  var ne = this.bounds.getNorthEast(),
      sw = this.bounds.getSouthWest();
      
  var tracks = this.svg.append("svg:g").attr("id", "tracks");
  // console.log(parseInt(google.maps.geometry.spherical.computeDistanceBetween(ne, sw) * this.gmap.getZoom()));
  var projection = d3.geo.mercator()
    .scale(480000)
    .translate([630700, 401100]);
  var path = d3.geo.path().projection(projection);
  
  tracks.selectAll("path").data(track).enter().append("svg:path").attr("d", path).attr('class', 'track');

  this.targetPath = d3.selectAll('#tracks')[0][0];
  this.pathNode = d3.select(this.targetPath).selectAll('path').node();
  this.pathLength = this.pathNode.getTotalLength();
  
};

DKOverlay.prototype.addTrain = function(train) { 
  this.circles.push(this.svg.append("circle").attr({ r: 10 }));
};


//
// Draw
//
DKOverlay.prototype.draw = function() {  
  if(!this.dataLoaded) return;
  
  // var bounds = d3.geo.bounds(this.json);
  // console.log(bounds);
  
  
  // var projection = d3.geo.mercator().rotate([-this.bounds.getCenter().lng(),0]).translate([0, 0]).scale(1);
  // var path = d3.geo.path().projection(projection);
  
  var ne = this.bounds.getNorthEast(),
      sw = this.bounds.getSouthWest();
          
  // var p1 = projection(bounds[1]),
  //     p2 = projection(bounds[0]);
       
  // this.svg.select('#tracks').attr('transform', 
  //         'scale('+ $('#d3map').width()/(p1[0]-p2[0])+','+$('#d3map').height()/(p2[1]-p1[1])+')'+
  //         'translate('+(-p2[0])+','+(-p1[1])+') ');
  //this.svg.select('#tracks').selectAll('path').attr('d', path);  
  
  var overlayProjection = this.getProjection();

  var swc = overlayProjection.fromLatLngToDivPixel(sw);
  var nec = overlayProjection.fromLatLngToDivPixel(ne);
  
  console.log(swc, nec);

  // Resize the image's div to fit the indicated dimensions.
  $("#d3map").css('left', swc.x + 'px');
  $("#d3map").css('top', nec.y + 'px');
  $("#d3map").css('width', (nec.x - swc.x) + 'px');
  $("#d3map").css('height', (swc.y - nec.y) + 'px');
      
  this.time += this.speed;
  var that = this;
 for(var i = 0; i < this.circles.length; i++) {
 
    this.circles[i].attr({
      fill: "#a32",
      transform: function () {
        var nT = that.time;
        nT = nT - Math.floor(nT);
        var p = that.pathNode.getPointAtLength(that.pathLength * nT);
        var isoX = p.x;
        var isoY = p.y;
        return "translate(" + [isoX, isoY] + ")";
      }
    });
  }
};

DKOverlay.prototype.onRemove = function() {  
  // this.vis.parentNode.removeChild(this.vis);
  // this.vis = null;
  // this.setMap(null);
};

trainzApp.factory('DKOverlay', function ($rootScope) {
  return DKOverlay;
});